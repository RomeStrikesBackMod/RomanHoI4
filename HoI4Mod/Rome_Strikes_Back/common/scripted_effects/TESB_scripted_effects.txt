#Written by CaesarVincens for Idhrendur's mega-campaign
#check if a Roman breakaway will become a puppet of Rome
TESB_check_puppet_willingness = {
	set_variable = { This.puppet_willingness = -50 } #init with -50 willingness
	custom_effect_tooltip = pw.base
	#check ratio of divisions
	set_temp_variable = { RME.num_divs8 = RME.num_divisions }
	divide_temp_variable = { RME.num_divs8 = 8 } #number of Rome's divisions/8
	set_temp_variable = { RME.num_divs4 = RME.num_divisions }
	divide_temp_variable = { RME.num_divs4 = 4 } #number of Rome's divisions/4
	set_temp_variable = { RME.num_divs2 = RME.num_divisions }
	divide_temp_variable = { RME.num_divs2 = 2 } #number of Rome's divisions/2
	if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divs8 } #more than 8 times the divs
		}
		add_to_variable = { This.puppet_willingness = 40 } #-10
		custom_effect_tooltip = pw.8div
	}
	else_if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divs4 } #more than 4 times the divs
		}
		add_to_variable = { This.puppet_willingness = 20 } #-30
		custom_effect_tooltip = pw.4div
	}
	else_if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divs2 } #more than double the divs
		}
		add_to_variable = { This.puppet_willingness = 10 } #-40
		custom_effect_tooltip = pw.2div
	}
	else_if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divisions } #more divs
		}
		add_to_variable = { This.puppet_willingness = 5 } #-45
		custom_effect_tooltip = pw.div
	}
	#check ruling party popularity
	set_variable = { RME.rpp@This = This.party_popularity@ruling_party }
	subtract_from_variable = { RME.rpp@This = 50 }
	divide_variable = { RME.rpp@This = 5 }
	round_variable = RME.rpp@This
	subtract_from_variable = { This.puppet_willingness = RME.rpp@This } #+-10
		custom_effect_tooltip = pw.rp
	#check stability
	set_variable = { RME.stab@This = This.stability }
	multiply_variable = { RME.stab@This = 10 }
	subtract_from_variable = { RME.stab@This = 5 }
	round_variable = RME.stab@This
	subtract_from_variable = { This.puppet_willingness = RME.stab@This } #+-5
		custom_effect_tooltip = pw.stab
	#check factory ratio
	set_temp_variable = { RME.num_factory8 = RME.num_of_factories }
	divide_temp_variable = { RME.num_factory8 = 8 } #number of Rome's factories/8
	set_temp_variable = { RME.num_factory4 = RME.num_of_factories }
	divide_temp_variable = { RME.num_factory4 = 4 } #number of Rome's factories/4
	set_temp_variable = { RME.num_factory2 = RME.num_of_factories }
	divide_temp_variable = { RME.num_factory2 = 2 } #number of Rome's factories/2
	if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_factory8 } #more than 8 times the facs
		}
		add_to_variable = { This.puppet_willingness = 20 } #-30
		custom_effect_tooltip = pw.8fac
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_factory4 } #more than 4 times the facs
		}
		add_to_variable = { This.puppet_willingness = 15 } #-35
		custom_effect_tooltip = pw.4fac
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_factory2 } #more than double the facs
		}
		add_to_variable = { This.puppet_willingness = 10 } #-40
		custom_effect_tooltip = pw.2fac
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_of_factories } #more facs
		}
		add_to_variable = { This.puppet_willingness = 5 } #-45
		custom_effect_tooltip = pw.fac
	}
	#check number of states
	set_temp_variable = { RME.num_states2 = RME.num_of_controlled_states }
	divide_temp_variable = { RME.num_states2 = 2 } #number of Rome's states/2
	set_temp_variable = { RME.2num_states = RME.num_of_controlled_states }
	multiply_temp_variable = { RME.2num_states = 2 } #number of Rome's states/2
	if = {
		limit = {
			check_variable = { This.num_of_controlled_states < 2 } #1 state minor
			RME = { num_of_controlled_states > 9 }
		}
		add_to_variable = { This.puppet_willingness = 20 } #-30
		custom_effect_tooltip = pw.1st
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states < 5 } #up to 4 states
			RME = { num_of_controlled_states > 19 }
		}
		add_to_variable = { This.puppet_willingness = 10 } #-30
		custom_effect_tooltip = pw.minor
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states < RME.num_states2 } #up to half as many as Rome
		}
		add_to_variable = { This.puppet_willingness = 5 } #-30
		custom_effect_tooltip = pw.halfst
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states < RME.num_of_controlled_states } #just less than Rome
		}
		custom_effect_tooltip = pw.lessst
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states > RME.2num_states } #more than twice Rome
		}
		subtract_from_variable = { This.puppet_willingness = 10 } #-30
		custom_effect_tooltip = pw.twicest
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states > RME.num_of_controlled_states } #just more than Rome
		}
		subtract_from_variable = { This.puppet_willingness = 5 } #-30
		custom_effect_tooltip = pw.morest
	}

	#opinion
	set_variable = { RME.opin@This = This.opinion@RME }
	divide_variable = { RME.opin@This = 10 }
	round_variable = RME.opin@This
	add_to_variable = { This.puppet_willingness = RME.opin@This } #+-10
		custom_effect_tooltip = pw.opin


	if = {
		limit = {
			has_government = communism
		}
		subtract_from_variable = { This.puppet_willingness = 10 }
		custom_effect_tooltip = pw.comm
	}
	if = {
		limit = {
			has_government = fascism
		}
		subtract_from_variable = { This.puppet_willingness = 5 }
		custom_effect_tooltip = pw.fasc
	}
	if = {
		limit = {
			has_government = democratic
		}
		subtract_from_variable = { This.puppet_willingness = 10 }
		custom_effect_tooltip = pw.demo
	}
	if = {
		limit = {
			is_owner_neighbor_of = RME
		}
		add_to_variable = { This.puppet_willingness = 5 }
		custom_effect_tooltip = pw.core_n
	}
	else_if = {
		limit = {
			any_neighbor_country = {
				is_subject_of = RME
			}
		}
		add_to_variable = { This.puppet_willingness = 5 }
		custom_effect_tooltip = pw.core_pup
	}
	else_if = {
		limit = {
			is_neighbor_of = RME
		}
		custom_effect_tooltip = pw.n
	}
	else = {
		subtract_from_variable = { This.puppet_willingness = 5 }
		custom_effect_tooltip = pw.not_n
	}
	if = {
		limit = {
			has_idea = culture_greek
		}
		add_to_variable = { This.puppet_willingness = 5 }
		custom_effect_tooltip = pw.greek		
	}
	if = {
		limit = {
			has_variable = pw_focus
		}
		add_to_variable = { This.puppet_willingness = pw_focus }
		custom_effect_tooltip = pw.focus
	}
}
#check if a Roman breakaway will join the faction of Rome
TESB_check_faction_willingness = {
	set_variable = { This.faction_willingness = -50 } #init with -50 willingness
	custom_effect_tooltip = pw.base
	#check ratio of divisions
	set_temp_variable = { RME.num_divs8 = RME.num_divisions }
	divide_temp_variable = { RME.num_divs8 = 8 } #number of Rome's divisions/8
	set_temp_variable = { RME.num_divs4 = RME.num_divisions }
	divide_temp_variable = { RME.num_divs4 = 4 } #number of Rome's divisions/4
	set_temp_variable = { RME.num_divs2 = RME.num_divisions }
	divide_temp_variable = { RME.num_divs2 = 2 } #number of Rome's divisions/2
	if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divs8 } #more than 8 times the divs
		}
		add_to_variable = { This.faction_willingness = 40 } #-10
		custom_effect_tooltip = pw.8div
	}
	else_if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divs4 } #more than 4 times the divs
		}
		add_to_variable = { This.faction_willingness = 20 } #-30
		custom_effect_tooltip = pw.4div
	}
	else_if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divs2 } #more than double the divs
		}
		add_to_variable = { This.faction_willingness = 10 } #-40
		custom_effect_tooltip = pw.2div
	}
	else_if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divisions } #more divs
		}
		add_to_variable = { This.faction_willingness = 5 } #-45
		custom_effect_tooltip = pw.div
	}
	#check democratic party popularity
	set_variable = { RME.demopp@This = This.party_popularity@democratic }
	subtract_from_variable = { RME.demopp@This = 50 }
	divide_variable = { RME.demopp@This = 5 }
	multiply_variable = { RME.demopp@This = 2 }
	round_variable = RME.demopp@This
	add_to_variable = { This.faction_willingness = RME.demopp@This } #+-20
		custom_effect_tooltip = pw.demop
	#check stability
	set_variable = { RME.stab@This = This.stability }
	multiply_variable = { RME.stab@This = 10 }
	subtract_from_variable = { RME.stab@This = 5 }
	round_variable = RME.stab@This
	subtract_from_variable = { This.faction_willingness = RME.stab@This } #+-5
		custom_effect_tooltip = pw.stab
	#check factory ratio
	set_temp_variable = { RME.num_factory8 = RME.num_of_factories }
	divide_temp_variable = { RME.num_factory8 = 8 } #number of Rome's factories/8
	set_temp_variable = { RME.num_factory4 = RME.num_of_factories }
	divide_temp_variable = { RME.num_factory4 = 4 } #number of Rome's factories/4
	set_temp_variable = { RME.num_factory2 = RME.num_of_factories }
	divide_temp_variable = { RME.num_factory2 = 2 } #number of Rome's factories/2
	if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_factory8 } #more than 8 times the facs
		}
		add_to_variable = { This.faction_willingness = 20 } #-30
		custom_effect_tooltip = pw.8fac
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_factory4 } #more than 4 times the facs
		}
		add_to_variable = { This.faction_willingness = 15 } #-35
		custom_effect_tooltip = pw.4fac
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_factory2 } #more than double the facs
		}
		add_to_variable = { This.faction_willingness = 10 } #-40
		custom_effect_tooltip = pw.2fac
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_of_factories } #more facs
		}
		add_to_variable = { This.faction_willingness = 5 } #-45
		custom_effect_tooltip = pw.fac
	}
	#check number of states
	set_temp_variable = { RME.num_states2 = RME.num_of_controlled_states }
	divide_temp_variable = { RME.num_states2 = 2 } #number of Rome's states/2
	set_temp_variable = { RME.2num_states = RME.num_of_controlled_states }
	multiply_temp_variable = { RME.2num_states = 2 } #number of Rome's states*2
	if = {
		limit = {
			check_variable = { This.num_of_controlled_states < 2 } #1 state minor
			RME = { num_of_controlled_states > 9 }
		}
		add_to_variable = { This.faction_willingness = 20 } #-30
		custom_effect_tooltip = pw.1st
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states < 5 } #up to 4 states
			RME = { num_of_controlled_states > 19 }
		}
		add_to_variable = { This.faction_willingness = 10 } #-30
		custom_effect_tooltip = pw.minor
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states < RME.num_states2 } #up to half as many as Rome
		}
		add_to_variable = { This.faction_willingness = 5 } #-30
		custom_effect_tooltip = pw.halfst
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states < RME.num_of_controlled_states } #just less than Rome
		}
		custom_effect_tooltip = pw.lessst
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states > RME.2num_states } #more than twice Rome
		}
		subtract_from_variable = { This.faction_willingness = 10 } #-30
		custom_effect_tooltip = pw.twicest
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states > RME.num_of_controlled_states } #just more than Rome
		}
		subtract_from_variable = { This.faction_willingness = 5 } #-30
		custom_effect_tooltip = pw.morest
	}

	#opinion
	set_variable = { RME.opin@This = This.opinion@RME }
	divide_variable = { RME.opin@This = 5 }
	round_variable = RME.opin@This
	add_to_variable = { This.faction_willingness = RME.opin@This } #+-20
		custom_effect_tooltip = pw.opin


	if = {
		limit = {
			has_government = communism
		}
		subtract_from_variable = { This.faction_willingness = 5 }
		custom_effect_tooltip = pw.comm_d
	}
	if = {
		limit = {
			has_government = absolutist
		}
		subtract_from_variable = { This.faction_willingness = 5 }
		custom_effect_tooltip = pw.abs_d
	}
	if = {
		limit = {
			has_government = fascism
		}
		subtract_from_variable = { This.faction_willingness = 10 }
		custom_effect_tooltip = pw.fasc_d
	}
	if = {
		limit = {
			has_government = democratic
		}
		add_to_variable = { This.faction_willingness = 10 }
		custom_effect_tooltip = pw.demo_d
	}
	if = {
		limit = {
			any_neighbor_country = {
				is_in_faction_with = RME
			}
		}
		add_to_variable = { This.faction_willingness = 5 }
		custom_effect_tooltip = pw.core_faction
	}
	else_if = {
		limit = {
			is_owner_neighbor_of = RME
		}
		add_to_variable = { This.faction_willingness = 5 }
		custom_effect_tooltip = pw.core_n
	}
	else_if = {
		limit = {
			is_neighbor_of = RME
		}
		custom_effect_tooltip = pw.n
	}
	else = {
		subtract_from_variable = { This.faction_willingness = 5 }
		custom_effect_tooltip = pw.not_n
	}
	if = {
		limit = {
			has_idea = culture_greek
		}
		add_to_variable = { This.faction_willingness = 10 }
		custom_effect_tooltip = pw.greek_d		
	}
	if = {
		limit = {
			has_variable = pw_focus
		}
		add_to_variable = { This.puppet_willingness = pw_focus }
		custom_effect_tooltip = pw.focus
	}
}
#integrate the faction into Rome
TESB_check_integrate_willingness = {
	set_variable = { This.integrate_willingness = -75 } #init with -75 willingness
	custom_effect_tooltip = pw.base75
	#check ratio of divisions
	set_temp_variable = { RME.num_divs8 = RME.num_divisions }
	divide_temp_variable = { RME.num_divs8 = 8 } #number of Rome's divisions/8
	set_temp_variable = { RME.num_divs4 = RME.num_divisions }
	divide_temp_variable = { RME.num_divs4 = 4 } #number of Rome's divisions/4
	set_temp_variable = { RME.num_divs2 = RME.num_divisions }
	divide_temp_variable = { RME.num_divs2 = 2 } #number of Rome's divisions/2
	if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divs8 } #more than 8 times the divs
		}
		add_to_variable = { This.integrate_willingness = 40 } #-10
		custom_effect_tooltip = pw.8div
	}
	else_if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divs4 } #more than 4 times the divs
		}
		add_to_variable = { This.integrate_willingness = 20 } #-30
		custom_effect_tooltip = pw.4div
	}
	else_if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divs2 } #more than double the divs
		}
		add_to_variable = { This.integrate_willingness = 10 } #-40
		custom_effect_tooltip = pw.2div
	}
	else_if = {
		limit = {
			check_variable = { This.num_divisions < RME.num_divisions } #more divs
		}
		add_to_variable = { This.integrate_willingness = 5 } #-45
		custom_effect_tooltip = pw.div
	}
	#check democratic party popularity
	set_variable = { RME.demopp@This = This.party_popularity@democratic }
	subtract_from_variable = { RME.demopp@This = 50 }
	divide_variable = { RME.demopp@This = 5 }
	multiply_variable = { RME.demopp@This = 2 }
	round_variable = RME.demopp@This
	add_to_variable = { This.integrate_willingness = RME.demopp@This } #+-20
		custom_effect_tooltip = pw.demop
	#check stability
	set_variable = { RME.stab@This = This.stability }
	multiply_variable = { RME.stab@This = 10 }
	subtract_from_variable = { RME.stab@This = 5 }
	round_variable = RME.stab@This
	subtract_from_variable = { This.integrate_willingness = RME.stab@This } #+-5
		custom_effect_tooltip = pw.stab
	#check factory ratio
	set_temp_variable = { RME.num_factory8 = RME.num_of_factories }
	divide_temp_variable = { RME.num_factory8 = 8 } #number of Rome's factories/8
	set_temp_variable = { RME.num_factory4 = RME.num_of_factories }
	divide_temp_variable = { RME.num_factory4 = 4 } #number of Rome's factories/4
	set_temp_variable = { RME.num_factory2 = RME.num_of_factories }
	divide_temp_variable = { RME.num_factory2 = 2 } #number of Rome's factories/2
	if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_factory8 } #more than 8 times the facs
		}
		add_to_variable = { This.integrate_willingness = 20 } #-30
		custom_effect_tooltip = pw.8fac
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_factory4 } #more than 4 times the facs
		}
		add_to_variable = { This.integrate_willingness = 15 } #-35
		custom_effect_tooltip = pw.4fac
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_factory2 } #more than double the facs
		}
		add_to_variable = { This.integrate_willingness = 10 } #-40
		custom_effect_tooltip = pw.2fac
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_factories < RME.num_of_factories } #more facs
		}
		add_to_variable = { This.integrate_willingness = 5 } #-45
		custom_effect_tooltip = pw.fac
	}
	#check number of states
	set_temp_variable = { RME.num_states2 = RME.num_of_controlled_states }
	divide_temp_variable = { RME.num_states2 = 2 } #number of Rome's states/2
	set_temp_variable = { RME.2num_states = RME.num_of_controlled_states }
	multiply_temp_variable = { RME.2num_states = 2 } #number of Rome's states*2
	if = {
		limit = {
			check_variable = { This.num_of_controlled_states < 2 } #1 state minor
			RME = { num_of_controlled_states > 9 }
		}
		add_to_variable = { This.integrate_willingness = 20 } #-30
		custom_effect_tooltip = pw.1st
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states < 5 } #up to 4 states
			RME = { num_of_controlled_states > 19 }
		}
		add_to_variable = { This.integrate_willingness = 10 } #-30
		custom_effect_tooltip = pw.minor
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states < RME.num_states2 } #up to half as many as Rome
		}
		add_to_variable = { This.integrate_willingness = 5 } #-30
		custom_effect_tooltip = pw.halfst
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states < RME.num_of_controlled_states } #just less than Rome
		}
		custom_effect_tooltip = pw.lessst
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states > RME.2num_states } #twice more than Rome
		}
		subtract_from_variable = { This.integrate_willingness = 10 } #-30
		custom_effect_tooltip = pw.twicest
	}
	else_if = {
		limit = {
			check_variable = { This.num_of_controlled_states > RME.num_of_controlled_states } #just more than Rome
		}
		subtract_from_variable = { This.integrate_willingness = 5 } #-30
		custom_effect_tooltip = pw.morest
	}

	#opinion
	set_variable = { RME.opin@This = This.opinion@RME }
	divide_variable = { RME.opin@This = 5 }
	round_variable = RME.opin@This
	add_to_variable = { This.integrate_willingness = RME.opin@This } #+-20
		custom_effect_tooltip = pw.opin


	if = {
		limit = {
			has_government = communism
		}
		subtract_from_variable = { This.integrate_willingness = 5 }
		custom_effect_tooltip = pw.comm_d
	}
	if = {
		limit = {
			has_government = absolutist
		}
		subtract_from_variable = { This.integrate_willingness = 5 }
		custom_effect_tooltip = pw.abs_d
	}
	if = {
		limit = {
			has_government = fascism
		}
		subtract_from_variable = { This.integrate_willingness = 10 }
		custom_effect_tooltip = pw.fasc_d
	}
	if = {
		limit = {
			has_government = democratic
		}
		add_to_variable = { This.integrate_willingness = 10 }
		custom_effect_tooltip = pw.demo_d
	}
	if = {
		limit = {
			any_neighbor_country = {
				is_in_faction_with = RME
			}
		}
		add_to_variable = { This.integrate_willingness = 5 }
		custom_effect_tooltip = pw.core_faction
	}
	else_if = {
		limit = {
			is_owner_neighbor_of = RME
		}
		add_to_variable = { This.integrate_willingness = 5 }
		custom_effect_tooltip = pw.core_n
	}
	else_if = {
		limit = {
			is_neighbor_of = RME
		}
		custom_effect_tooltip = pw.n
	}
	else = {
		subtract_from_variable = { This.integrate_willingness = 5 }
		custom_effect_tooltip = pw.not_n
	}
	if = {
		limit = {
			has_idea = culture_greek
		}
		add_to_variable = { This.integrate_willingness = 10 }
		custom_effect_tooltip = pw.greek_d		
	}
	if = {
		limit = {
			is_in_faction_with = RME
		}
		#add_to_variable = { This.integrate_willingness = 10 }
		#custom_effect_tooltip = pw.faction
	}
	if = {
		limit = {
			has_variable = pw_focus
		}
		add_to_variable = { This.puppet_willingness = pw_focus }
		custom_effect_tooltip = pw.focus
	}
}

TESB_restore_rome_region_effect = {
	if = {
		limit = { is_potential_friend_of_ROOT = yes }
		if = {
			limit = {
				ROOT = { has_completed_focus = RME_reestablish_roman_hegemony }
			}
			country_event = { id = tesb_restore_rome.10 hours = 12 random_hours = 12 }
		}
		else_if = {
			limit = {
				ROOT = { has_completed_focus = RME_restore_rome_focus }
			}
			country_event = { id = tesb_restore_rome.20 hours = 12 random_hours = 12 }
		}
	}
	else_if = {
		limit = { is_ally_with = ROOT }
		custom_effect_tooltip = RME_already_allied
	}
	else = {
		every_state = {
			tooltip = RME_claim_states
			limit = { has_state_flag = original_owner_@PREV is_owned_by_ROOT_or_ally = no }
			add_claim_by = ROOT
		}
	}

}

#Aotearoa
TESB_AOT_socialist_support = {
	if = {
		limit = { has_government = communism }
		set_variable = { AOT_socialist_support = party_popularity@democratic }
	}
	else_if = {
		limit = { has_government = democratic }
		set_variable = { AOT_socialist_support = party_popularity@communism }
	}
	divide_variable = {
		AOT_socialist_support = 10
	}
}

aot_island_control_tooltip = {
	if = {
		limit = {
			check_variable = { var = aot_island_control value = 0 compare = equals }
		}
		custom_effect_tooltip = AOT_island_influence_none_tt
	}
	if = {
		limit = {
			check_variable = { var = aot_island_control value = 1 compare = equals }
		}
		custom_effect_tooltip = AOT_island_influence_weak_tt
	}
	if = {
		limit = {
			check_variable = { var = aot_island_control value = 2 compare = equals }
		}
		custom_effect_tooltip = AOT_island_influence_strong_tt
	}
	if = {
		limit = {
			check_variable = { var = aot_island_control value = 3 compare = equals }
		}
		custom_effect_tooltip = AOT_island_influence_total_tt
	}
}

aot_island_control_cost_calculation = {
	if = {
		limit = {
			check_variable = { var = aot_island_control value = 1 compare = equals }
		}
		set_variable = { var = aot_island_control_cost value = 10 }
	}
	if = {
		limit = {
			check_variable = { var = aot_island_control value = 2 compare = equals }
		}
		set_variable = { var = aot_island_control_cost value = 20 }
	}
	if = {
		limit = {
			check_variable = { var = aot_island_control value = 3 compare = equals }
		}
		set_variable = { var = aot_island_control_cost value = 30 }
	}
}

#Set state owner flags, used in certain effects
root_takes_prev = {
	#root is new owner, prev is old owner, in state scope
	if = {
		limit = { has_state_flag = original_owner_@PREV }
		set_state_flag = old_owner_@PREV
		set_state_flag = owner_@ROOT
	}
	if = {
		limit = { has_state_flag = owner_@PREV }
		set_state_flag = old_owner_@PREV
		set_state_flag = owner_@ROOT
		clr_state_flag = owner_@PREV
	}
}

prev_takes_root = {
	#prev is new owner, root is old owner, in state scope
	if = {
		limit = { has_state_flag = original_owner_@ROOT }
		set_state_flag = old_owner_@ROOT
		set_state_flag = owner_@PREV
	}
	if = {
		limit = { has_state_flag = owner_@ROOT }
		set_state_flag = old_owner_@ROOT
		set_state_flag = owner_@PREV
		clr_state_flag = owner_@ROOT
	}
}

#Italy
crown_giuseppe = {
	set_country_flag = ITA_crowned_giuseppe
	add_country_leader_trait = crowned_monarch
	set_character_name = {
		character = ITA_giuseppe_lombardi
		name = ITA_giuseppe_ii_lombardi
	}
}

bav_hun_deal_effect = {
	BAV = {
		clr_country_flag = BAV_HUN_deal
		transfer_state = 226 # significant_number - Bavaria
		every_owned_state = {
			limit = {
				OR = {
					state = 287	# significant_number - Bohemia
					state = 283	# significant_number - Moravia
					state = 284	# significant_number - Österreich
				}
				OR = {
					is_claimed_by = HUN
					is_core_of = HUN
				}
			}
			if = {
				limit = {
					is_fully_controlled_by = BAV
				}
				transfer_state_to = HUN
			}
			else = {
				set_state_owner_to = HUN
			}
			remove_core_of = BAV
		}
	}
}

set_teichu = {
	if = {
		limit = {
			date < 1938.1.30
		}
		set_global_flag = teichu
	}
}

jap_start_civil_war = {
	hidden_effect = {
		every_country_with_original_tag = {
			original_tag_to_check = JAP
			add_ideas = JAP_civil_war_starter
		}
	}
}
jap_end_civil_war = {
	hidden_effect = {
		every_country_with_original_tag = {
			original_tag_to_check = JAP
			add_ideas = JAP_myoukougein
			remove_ideas = JAP_civil_war_starter
			remove_ideas = JAP_civil_war_finisher
			delete_unit_template_and_units = {
				division_template = "Shogunate Militia"
				disband = yes
			}
			delete_unit_template_and_units = {
				division_template = "Imperial Militia"
				disband = yes
			}
			delete_unit_template_and_units = {
				division_template = "Imperial Tanks"
				disband = yes
			}
		}
		every_country = {
			limit = {
				has_idea = JAP_volunteers
			}
			remove_ideas = JAP_volunteers
		}
	}
}

partition_germany = {
	#custom_effect_tooltip = compliance_80_effect_tooltip
	hidden_effect = {
		if = {
			# if german_part does not exist, simply release it as a puppet
			limit = {
				var:german_part = {
					exists = no
				}
			}
			release_autonomy = {
				target = german_part
				autonomy_state = autonomy_puppet
				freedom_level = 0.5
				release_non_owned_controlled = yes
			}
			var:german_part = { set_BRG_subject_tag = yes }
		}
		else_if = {
			limit = {
				var:german_part = {
					NOT = { is_subject_of = ROOT }
				}
			}
			# if german_part exists, create a dynamic country as our new puppet

			set_variable = { global.dyn_tag = german_part }
			create_dynamic_country = {
				original_tag = german_part
				set_temp_variable = { new_country = this }

				PREV = {
					every_controlled_state = {
						limit = {
							is_core_of = german_part
							NOT = {
								state = 209 #Holland
								state = 210 #Friesland
								state = 231 #East Friesland
								state = 213 #Hessen
								state = 214 #Eastern Rhineland
								state = 215 #Westfalen
							}
						}

						var:new_country = {
							transfer_state = PREV
						}
					}

					puppet = new_country

					set_autonomy = {
						target = new_country
						autonomy_state = autonomy_puppet
						freedom_level = 0.5
					}
				}
				set_BRG_subject_tag = yes
			}
		}
	}
}

set_BRG_subject_tag = {
	if = {
		limit = {
			is_subject_of = BRG
			BRG = { has_government = absolutist }
			is_dynamic_country = no
		}
		meta_effect = {
			text = {
				set_cosmetic_tag = [TAGNAME]_subj_BRG
			}
			TAGNAME = "[THIS.GetTag]"
		}
	}
	if = {
		limit = {
			is_subject_of = BRG
			BRG = { has_government = absolutist }
			is_dynamic_country = yes
		}
		meta_effect = {
			text = {
				set_cosmetic_tag = [TAGNAME]_subj_BRG
			}
			TAGNAME = "[?global.dyn_tag.GetTag]"
		}
		log = "[?global.dyn_tag]"
		clear_variable = global.dyn_tag
	}
}

drop_BRG_subject_tag = {
	if = {
		limit = { has_BRG_subject_tag = yes }
		drop_cosmetic_tag = yes
	}
}

d_set_bohemia = {
	BAV = {
		set_cosmetic_tag = bohemia
	}
}

d_drop_bohemia = {
	BAV = {
		drop_cosmetic_tag = yes
	}
}

d_testing_effect = {
	hold_election = ENG
}
d_hire_folks = {
	HUN = {
		create_country_leader = {
			name = HUN_lajos_esterhazy
			picture = GFX_Portrait_hungary_miklos_horthy
			ideology = dictatorship
		}
		random_character = {
			limit = {
				can_be_country_leader = yes
				has_ideology = dictatorship
			}
			promote_character = yes
		}
	}
}

d_various_updates = {
	364 = {
		remove_core_of = PEG
		add_core_of = SIA
	}
	333 = {
		add_core_of = RYU
	}
	SIL = {
		add_state_core = 282
		add_state_core = 285
	}
	set_victory_points = {
		province = 9570
		value = 10
	}
	set_victory_points = {
		province = 9347
		value = 15
	}
	set_victory_points = {
		province = 692
		value = 15
	}
	GRB = {
		diplomatic_relation = {
			country = GER
			relation = guarantee
			active = no
		}
		diplomatic_relation = {
			country = BRI
			relation = guarantee
			active = no
		}
		diplomatic_relation = {
			country = BRG
			relation = guarantee
			active = no
		}
	}
	SCA = {
		complete_national_focus = SCA_national_militia
		568 = {
			add_building_construction = {
				type = naval_base
				level = 1
				province = 3325
				instant_build = yes
			}
		}
	}
	if = {
		limit = {
			MEX = { is_in_faction_with = UTA }
		}
		UTA = {
			remove_from_faction = MEX
		}
	}
}