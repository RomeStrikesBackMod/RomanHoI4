focus_tree = {
	id = SCA_focus
	
	country = {
		factor = 0
		
		modifier = {
			add = 10
			tag = SCA
		}
	}
	
	default = no
	
	shared_focus = army_effort
	shared_focus = aviation_effort
	shared_focus = naval_effort
	shared_focus = industrial_effort
	shared_focus = political_effort

	focus = {
		id = border_disputes_conquerSCAGER
		icon = GFX_goal_generic_more_territorial_claims
		text = border_disputes_conquerGER
		x = 26
		y = 0
		cost = 10
		available = {
			has_war = no
			not_in_border_conflict = yes
			GER = {
				exists = yes
				not_allies_or_subjects = yes
				in_weak_faction = yes
				OR = {
					potential_take_core_target = yes
					if = {
						limit = { ROOT = { has_government = communism } }
						potential_communist_puppet_target = yes
					}
					if = {
						limit = { ROOT = { has_government = fascism } }
						potential_fascist_annex_target = yes
					}
					potential_take_state_target = yes
					potential_border_war_target = yes
				}
			}
		}
		completion_reward = {
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_opinion = { target = GER value > 0 }
			}
			modifier = {
				factor = 0
				GER = { in_weak_faction = no }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 2
				GER = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = prepare_for_war_conquerSCAGER
		icon = GFX_goal_generic_position_armies
		text = prepare_for_war_conquerGER
		prerequisite = { focus = border_disputes_conquerSCAGER }
		bypass = {
			has_war_with = GER
		}
		x = 0
		y = 1
		relative_position_id = border_disputes_conquerSCAGER
		cost = 4
		available = {
			date > 1936.1.1
			has_war = no
			not_in_border_conflict = yes
			GER = {
				exists = yes
				not_in_border_conflict = yes
			}
		}
		continue_if_invalid = yes
		select_effect = {
			random_owned_controlled_state = {
				limit = { any_neighbor_state = { is_fully_controlled_by = GER } }
				set_variable = { ROOT.attacker_state = THIS.id }
				set_state_flag = border_incident_active
			}
			var:attacker_state = {
				random_neighbor_state = {
					limit = { is_fully_controlled_by = GER }
					set_variable = { ROOT.defender_state = THIS.id }
					set_state_flag = border_incident_active
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = GER } } }
					random_state = {
						limit = {
							is_fully_controlled_by = GER
							is_coastal = yes
						}
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = GER } } }
					random_state = {
						limit = { is_fully_controlled_by = GER }
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
			}
		}
		completion_reward = {
			GER = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = 1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = 1000 } }
			}
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_opinion = { target = GER value > 0 }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 0
				GER = { in_weak_faction = no }
			}
			modifier = {
				factor = 2
				GER = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = neighbor_war_conquerSCAGER
		icon = GFX_goal_generic_occupy_states_ongoing_war
		text = neighbor_war_conquerGER
		prerequisite = { focus = prepare_for_war_conquerSCAGER }
		bypass = {
			has_war_with = GER
		}
		x = 0
		y = 1
		relative_position_id = prepare_for_war_conquerSCAGER
		cost = 3
		available = {
			has_war = no
			hidden_trigger = {
				NOT = { any_owned_state = { has_border_war = yes } }
				GER = { NOT = { any_owned_state = { has_border_war = yes } } }
			}
			if = {
				limit = { GER = { potential_border_war_target = yes } }
				var:attacker_state = { is_fully_controlled_by = ROOT }
				var:defender_state = { is_fully_controlled_by = GER }
				divisions_in_border_state = { state = var:attacker_state border_state = var:defender_state size > 0 }
			}
		}
		completion_reward = {
			if = {
				limit = { GER = { potential_take_core_target = yes } }
				declare_war_on = {
					target = GER
					type = take_core_state
					generator = core_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { GER = { potential_communist_puppet_target = yes } }
				declare_war_on = {
					target = GER
					type = puppet_wargoal_focus
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { GER = { potential_fascist_annex_target = yes } }
				declare_war_on = {
					target = GER
					type = annex_everything
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { GER = { potential_take_state_target = yes } }
				add_state_claim = var:defender_state
				declare_war_on = {
					target = GER
					type = take_state_focus
					generator = claimed_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { GER = { potential_border_war_target = yes } }
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = var:attacker_state
						num_provinces = 6
						on_win = neighbor_war.1
						on_lose = neighbor_war.2
						on_cancel = neighbor_war.3
					}
					defender = {
						state = var:defender_state
						num_provinces = 6
						on_win = neighbor_war.2
						on_lose = neighbor_war.1
						on_cancel = neighbor_war.3
					}
					minimum_duration_in_days = 14
				}
				add_named_threat = { threat = 1 name = neighbor_war_NF_threat }
			}
			GER = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = -1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = -1000 } }
			}
			var:attacker_state = { clr_state_flag = border_incident_active }
			var:defender_state = { clr_state_flag = border_incident_active }
		}
		ai_will_do = {
			factor = 10
		}
	}

	focus = {
		id = border_disputes_conquerSCASCO
		icon = GFX_goal_generic_more_territorial_claims
		text = border_disputes_conquerSCO
		x = 28
		y = 0
		cost = 10
		available = {
			has_war = no
			not_in_border_conflict = yes
			SCO = {
				exists = yes
				not_allies_or_subjects = yes
				in_weak_faction = yes
				OR = {
					potential_take_core_target = yes
					if = {
						limit = { ROOT = { has_government = communism } }
						potential_communist_puppet_target = yes
					}
					if = {
						limit = { ROOT = { has_government = fascism } }
						potential_fascist_annex_target = yes
					}
					potential_take_state_target = yes
					potential_border_war_target = yes
				}
			}
		}
		completion_reward = {
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 7
			modifier = {
				factor = 0
				has_opinion = { target = SCO value > 0 }
			}
			modifier = {
				factor = 0
				SCO = { in_weak_faction = no }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 2
				SCO = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = prepare_for_war_conquerSCASCO
		icon = GFX_goal_generic_position_armies
		text = prepare_for_war_conquerSCO
		prerequisite = { focus = border_disputes_conquerSCASCO }
		bypass = {
			has_war_with = SCO
		}
		x = 0
		y = 1
		relative_position_id = border_disputes_conquerSCASCO
		cost = 4
		available = {
			date > 1936.1.1
			has_war = no
			not_in_border_conflict = yes
			SCO = {
				exists = yes
				not_in_border_conflict = yes
			}
		}
		continue_if_invalid = yes
		select_effect = {
			random_owned_controlled_state = {
				limit = { any_neighbor_state = { is_fully_controlled_by = SCO } }
				set_variable = { ROOT.attacker_state = THIS.id }
				set_state_flag = border_incident_active
			}
			var:attacker_state = {
				random_neighbor_state = {
					limit = { is_fully_controlled_by = SCO }
					set_variable = { ROOT.defender_state = THIS.id }
					set_state_flag = border_incident_active
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = SCO } } }
					random_state = {
						limit = {
							is_fully_controlled_by = SCO
							is_coastal = yes
						}
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = SCO } } }
					random_state = {
						limit = { is_fully_controlled_by = SCO }
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
			}
		}
		completion_reward = {
			SCO = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = 1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = 1000 } }
			}
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_opinion = { target = SCO value > 0 }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 0
				SCO = { in_weak_faction = no }
			}
			modifier = {
				factor = 2
				SCO = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = neighbor_war_conquerSCASCO
		icon = GFX_goal_generic_occupy_states_ongoing_war
		text = neighbor_war_conquerSCO
		prerequisite = { focus = prepare_for_war_conquerSCASCO }
		bypass = {
			has_war_with = SCO
		}
		x = 0
		y = 1
		relative_position_id = prepare_for_war_conquerSCASCO
		cost = 3
		available = {
			has_war = no
			hidden_trigger = {
				NOT = { any_owned_state = { has_border_war = yes } }
				SCO = { NOT = { any_owned_state = { has_border_war = yes } } }
			}
			if = {
				limit = { SCO = { potential_border_war_target = yes } }
				var:attacker_state = { is_fully_controlled_by = ROOT }
				var:defender_state = { is_fully_controlled_by = SCO }
				divisions_in_border_state = { state = var:attacker_state border_state = var:defender_state size > 0 }
			}
		}
		completion_reward = {
			if = {
				limit = { SCO = { potential_take_core_target = yes } }
				declare_war_on = {
					target = SCO
					type = take_core_state
					generator = core_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { SCO = { potential_communist_puppet_target = yes } }
				declare_war_on = {
					target = SCO
					type = puppet_wargoal_focus
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { SCO = { potential_fascist_annex_target = yes } }
				declare_war_on = {
					target = SCO
					type = annex_everything
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { SCO = { potential_take_state_target = yes } }
				add_state_claim = var:defender_state
				declare_war_on = {
					target = SCO
					type = take_state_focus
					generator = claimed_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { SCO = { potential_border_war_target = yes } }
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = var:attacker_state
						num_provinces = 6
						on_win = neighbor_war.1
						on_lose = neighbor_war.2
						on_cancel = neighbor_war.3
					}
					defender = {
						state = var:defender_state
						num_provinces = 6
						on_win = neighbor_war.2
						on_lose = neighbor_war.1
						on_cancel = neighbor_war.3
					}
					minimum_duration_in_days = 14
				}
				add_named_threat = { threat = 1 name = neighbor_war_NF_threat }
			}
			SCO = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = -1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = -1000 } }
			}
			var:attacker_state = { clr_state_flag = border_incident_active }
			var:defender_state = { clr_state_flag = border_incident_active }
		}
		ai_will_do = {
			factor = 10
		}
	}

	focus = {
		id = border_disputes_conquerSCANOR
		icon = GFX_goal_generic_more_territorial_claims
		text = border_disputes_conquerNOR
		x = 30
		y = 0
		cost = 10
		available = {
			has_war = no
			not_in_border_conflict = yes
			NOR = {
				exists = yes
				not_allies_or_subjects = yes
				in_weak_faction = yes
				OR = {
					potential_take_core_target = yes
					if = {
						limit = { ROOT = { has_government = communism } }
						potential_communist_puppet_target = yes
					}
					if = {
						limit = { ROOT = { has_government = fascism } }
						potential_fascist_annex_target = yes
					}
					potential_take_state_target = yes
					potential_border_war_target = yes
				}
			}
		}
		completion_reward = {
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 5
			modifier = {
				factor = 0
				has_opinion = { target = NOR value > 0 }
			}
			modifier = {
				factor = 0
				NOR = { in_weak_faction = no }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 2
				NOR = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = prepare_for_war_conquerSCANOR
		icon = GFX_goal_generic_position_armies
		text = prepare_for_war_conquerNOR
		prerequisite = { focus = border_disputes_conquerSCANOR }
		bypass = {
			has_war_with = NOR
		}
		x = 0
		y = 1
		relative_position_id = border_disputes_conquerSCANOR
		cost = 4
		available = {
			date > 1936.1.1
			has_war = no
			not_in_border_conflict = yes
			NOR = {
				exists = yes
				not_in_border_conflict = yes
			}
		}
		continue_if_invalid = yes
		select_effect = {
			random_owned_controlled_state = {
				limit = { any_neighbor_state = { is_fully_controlled_by = NOR } }
				set_variable = { ROOT.attacker_state = THIS.id }
				set_state_flag = border_incident_active
			}
			var:attacker_state = {
				random_neighbor_state = {
					limit = { is_fully_controlled_by = NOR }
					set_variable = { ROOT.defender_state = THIS.id }
					set_state_flag = border_incident_active
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = NOR } } }
					random_state = {
						limit = {
							is_fully_controlled_by = NOR
							is_coastal = yes
						}
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = NOR } } }
					random_state = {
						limit = { is_fully_controlled_by = NOR }
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
			}
		}
		completion_reward = {
			NOR = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = 1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = 1000 } }
			}
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_opinion = { target = NOR value > 0 }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 0
				NOR = { in_weak_faction = no }
			}
			modifier = {
				factor = 2
				NOR = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = neighbor_war_conquerSCANOR
		icon = GFX_goal_generic_occupy_states_ongoing_war
		text = neighbor_war_conquerNOR
		prerequisite = { focus = prepare_for_war_conquerSCANOR }
		bypass = {
			has_war_with = NOR
		}
		x = 0
		y = 1
		relative_position_id = prepare_for_war_conquerSCANOR
		cost = 3
		available = {
			has_war = no
			hidden_trigger = {
				NOT = { any_owned_state = { has_border_war = yes } }
				NOR = { NOT = { any_owned_state = { has_border_war = yes } } }
			}
			if = {
				limit = { NOR = { potential_border_war_target = yes } }
				var:attacker_state = { is_fully_controlled_by = ROOT }
				var:defender_state = { is_fully_controlled_by = NOR }
				divisions_in_border_state = { state = var:attacker_state border_state = var:defender_state size > 0 }
			}
		}
		completion_reward = {
			if = {
				limit = { NOR = { potential_take_core_target = yes } }
				declare_war_on = {
					target = NOR
					type = take_core_state
					generator = core_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { NOR = { potential_communist_puppet_target = yes } }
				declare_war_on = {
					target = NOR
					type = puppet_wargoal_focus
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { NOR = { potential_fascist_annex_target = yes } }
				declare_war_on = {
					target = NOR
					type = annex_everything
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { NOR = { potential_take_state_target = yes } }
				add_state_claim = var:defender_state
				declare_war_on = {
					target = NOR
					type = take_state_focus
					generator = claimed_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { NOR = { potential_border_war_target = yes } }
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = var:attacker_state
						num_provinces = 6
						on_win = neighbor_war.1
						on_lose = neighbor_war.2
						on_cancel = neighbor_war.3
					}
					defender = {
						state = var:defender_state
						num_provinces = 6
						on_win = neighbor_war.2
						on_lose = neighbor_war.1
						on_cancel = neighbor_war.3
					}
					minimum_duration_in_days = 14
				}
				add_named_threat = { threat = 1 name = neighbor_war_NF_threat }
			}
			NOR = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = -1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = -1000 } }
			}
			var:attacker_state = { clr_state_flag = border_incident_active }
			var:defender_state = { clr_state_flag = border_incident_active }
		}
		ai_will_do = {
			factor = 10
		}
	}

	focus = {
		id = border_disputes_conquerSCARUS
		icon = GFX_goal_generic_more_territorial_claims
		text = border_disputes_conquerRUS
		x = 32
		y = 0
		cost = 10
		available = {
			has_war = no
			not_in_border_conflict = yes
			RUS = {
				exists = yes
				not_allies_or_subjects = yes
				in_weak_faction = yes
				OR = {
					potential_take_core_target = yes
					if = {
						limit = { ROOT = { has_government = communism } }
						potential_communist_puppet_target = yes
					}
					if = {
						limit = { ROOT = { has_government = fascism } }
						potential_fascist_annex_target = yes
					}
					potential_take_state_target = yes
					potential_border_war_target = yes
				}
			}
		}
		completion_reward = {
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 0
				has_opinion = { target = RUS value > 0 }
			}
			modifier = {
				factor = 0
				RUS = { in_weak_faction = no }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 2
				RUS = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = prepare_for_war_conquerSCARUS
		icon = GFX_goal_generic_position_armies
		text = prepare_for_war_conquerRUS
		prerequisite = { focus = border_disputes_conquerSCARUS }
		bypass = {
			has_war_with = RUS
		}
		x = 0
		y = 1
		relative_position_id = border_disputes_conquerSCARUS
		cost = 4
		available = {
			date > 1936.1.1
			has_war = no
			not_in_border_conflict = yes
			RUS = {
				exists = yes
				not_in_border_conflict = yes
			}
		}
		continue_if_invalid = yes
		select_effect = {
			random_owned_controlled_state = {
				limit = { any_neighbor_state = { is_fully_controlled_by = RUS } }
				set_variable = { ROOT.attacker_state = THIS.id }
				set_state_flag = border_incident_active
			}
			var:attacker_state = {
				random_neighbor_state = {
					limit = { is_fully_controlled_by = RUS }
					set_variable = { ROOT.defender_state = THIS.id }
					set_state_flag = border_incident_active
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = RUS } } }
					random_state = {
						limit = {
							is_fully_controlled_by = RUS
							is_coastal = yes
						}
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = RUS } } }
					random_state = {
						limit = { is_fully_controlled_by = RUS }
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
			}
		}
		completion_reward = {
			RUS = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = 1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = 1000 } }
			}
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_opinion = { target = RUS value > 0 }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 0
				RUS = { in_weak_faction = no }
			}
			modifier = {
				factor = 2
				RUS = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = neighbor_war_conquerSCARUS
		icon = GFX_goal_generic_occupy_states_ongoing_war
		text = neighbor_war_conquerRUS
		prerequisite = { focus = prepare_for_war_conquerSCARUS }
		bypass = {
			has_war_with = RUS
		}
		x = 0
		y = 1
		relative_position_id = prepare_for_war_conquerSCARUS
		cost = 3
		available = {
			has_war = no
			hidden_trigger = {
				NOT = { any_owned_state = { has_border_war = yes } }
				RUS = { NOT = { any_owned_state = { has_border_war = yes } } }
			}
			if = {
				limit = { RUS = { potential_border_war_target = yes } }
				var:attacker_state = { is_fully_controlled_by = ROOT }
				var:defender_state = { is_fully_controlled_by = RUS }
				divisions_in_border_state = { state = var:attacker_state border_state = var:defender_state size > 0 }
			}
		}
		completion_reward = {
			if = {
				limit = { RUS = { potential_take_core_target = yes } }
				declare_war_on = {
					target = RUS
					type = take_core_state
					generator = core_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { RUS = { potential_communist_puppet_target = yes } }
				declare_war_on = {
					target = RUS
					type = puppet_wargoal_focus
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { RUS = { potential_fascist_annex_target = yes } }
				declare_war_on = {
					target = RUS
					type = annex_everything
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { RUS = { potential_take_state_target = yes } }
				add_state_claim = var:defender_state
				declare_war_on = {
					target = RUS
					type = take_state_focus
					generator = claimed_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { RUS = { potential_border_war_target = yes } }
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = var:attacker_state
						num_provinces = 6
						on_win = neighbor_war.1
						on_lose = neighbor_war.2
						on_cancel = neighbor_war.3
					}
					defender = {
						state = var:defender_state
						num_provinces = 6
						on_win = neighbor_war.2
						on_lose = neighbor_war.1
						on_cancel = neighbor_war.3
					}
					minimum_duration_in_days = 14
				}
				add_named_threat = { threat = 1 name = neighbor_war_NF_threat }
			}
			RUS = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = -1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = -1000 } }
			}
			var:attacker_state = { clr_state_flag = border_incident_active }
			var:defender_state = { clr_state_flag = border_incident_active }
		}
		ai_will_do = {
			factor = 10
		}
	}

}