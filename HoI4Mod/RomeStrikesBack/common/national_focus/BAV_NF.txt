focus_tree = {
	id = BAV_focus
	
	country = {
		factor = 0
		
		modifier = {
			add = 10
			tag = BAV
		}
	}
	
	default = no
	
	shared_focus = army_effort
	shared_focus = aviation_effort
	shared_focus = naval_effort
	shared_focus = industrial_effort
	shared_focus = political_effort

	focus = {
		id = border_disputes_conquerBAVHUN
		icon = GFX_goal_generic_more_territorial_claims
		text = border_disputes_conquerHUN
		x = 26
		y = 0
		cost = 10
		available = {
			has_war = no
			not_in_border_conflict = yes
			HUN = {
				exists = yes
				not_allies_or_subjects = yes
				in_weak_faction = yes
				OR = {
					potential_take_core_target = yes
					if = {
						limit = { ROOT = { has_government = communism } }
						potential_communist_puppet_target = yes
					}
					if = {
						limit = { ROOT = { has_government = fascism } }
						potential_fascist_annex_target = yes
					}
					potential_take_state_target = yes
					potential_border_war_target = yes
				}
			}
		}
		completion_reward = {
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_opinion = { target = HUN value > 0 }
			}
			modifier = {
				factor = 0
				HUN = { in_weak_faction = no }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 2
				HUN = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = prepare_for_war_conquerBAVHUN
		icon = GFX_goal_generic_position_armies
		text = prepare_for_war_conquerHUN
		prerequisite = { focus = border_disputes_conquerBAVHUN }
		bypass = {
			has_war_with = HUN
		}
		x = 0
		y = 1
		relative_position_id = border_disputes_conquerBAVHUN
		cost = 4
		available = {
			date > 1936.1.1
			has_war = no
			not_in_border_conflict = yes
			HUN = {
				exists = yes
				not_in_border_conflict = yes
			}
		}
		continue_if_invalid = yes
		select_effect = {
			random_owned_controlled_state = {
				limit = { any_neighbor_state = { is_fully_controlled_by = HUN } }
				set_variable = { ROOT.attacker_state = THIS.id }
				set_state_flag = border_incident_active
			}
			var:attacker_state = {
				random_neighbor_state = {
					limit = { is_fully_controlled_by = HUN }
					set_variable = { ROOT.defender_state = THIS.id }
					set_state_flag = border_incident_active
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = HUN } } }
					random_state = {
						limit = {
							is_fully_controlled_by = HUN
							is_coastal = yes
						}
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = HUN } } }
					random_state = {
						limit = { is_fully_controlled_by = HUN }
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
			}
		}
		completion_reward = {
			HUN = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = 1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = 1000 } }
			}
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_opinion = { target = HUN value > 0 }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 0
				HUN = { in_weak_faction = no }
			}
			modifier = {
				factor = 2
				HUN = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = neighbor_war_conquerBAVHUN
		icon = GFX_goal_generic_occupy_states_ongoing_war
		text = neighbor_war_conquerHUN
		prerequisite = { focus = prepare_for_war_conquerBAVHUN }
		bypass = {
			has_war_with = HUN
		}
		x = 0
		y = 1
		relative_position_id = prepare_for_war_conquerBAVHUN
		cost = 3
		available = {
			has_war = no
			hidden_trigger = {
				NOT = { any_owned_state = { has_border_war = yes } }
				HUN = { NOT = { any_owned_state = { has_border_war = yes } } }
			}
			if = {
				limit = { HUN = { potential_border_war_target = yes } }
				var:attacker_state = { is_fully_controlled_by = ROOT }
				var:defender_state = { is_fully_controlled_by = HUN }
				divisions_in_border_state = { state = var:attacker_state border_state = var:defender_state size > 0 }
			}
		}
		completion_reward = {
			if = {
				limit = { HUN = { potential_take_core_target = yes } }
				declare_war_on = {
					target = HUN
					type = take_core_state
					generator = core_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { HUN = { potential_communist_puppet_target = yes } }
				declare_war_on = {
					target = HUN
					type = puppet_wargoal_focus
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { HUN = { potential_fascist_annex_target = yes } }
				declare_war_on = {
					target = HUN
					type = annex_everything
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { HUN = { potential_take_state_target = yes } }
				add_state_claim = var:defender_state
				declare_war_on = {
					target = HUN
					type = take_state_focus
					generator = claimed_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { HUN = { potential_border_war_target = yes } }
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = var:attacker_state
						num_provinces = 6
						on_win = neighbor_war.1
						on_lose = neighbor_war.2
						on_cancel = neighbor_war.3
					}
					defender = {
						state = var:defender_state
						num_provinces = 6
						on_win = neighbor_war.2
						on_lose = neighbor_war.1
						on_cancel = neighbor_war.3
					}
					minimum_duration_in_days = 14
				}
				add_named_threat = { threat = 1 name = neighbor_war_NF_threat }
			}
			HUN = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = -1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = -1000 } }
			}
			var:attacker_state = { clr_state_flag = border_incident_active }
			var:defender_state = { clr_state_flag = border_incident_active }
		}
		ai_will_do = {
			factor = 10
		}
	}

	focus = {
		id = border_disputes_conquerBAVGER
		icon = GFX_goal_generic_more_territorial_claims
		text = border_disputes_conquerGER
		x = 28
		y = 0
		cost = 10
		available = {
			has_war = no
			not_in_border_conflict = yes
			GER = {
				exists = yes
				not_allies_or_subjects = yes
				in_weak_faction = yes
				OR = {
					potential_take_core_target = yes
					if = {
						limit = { ROOT = { has_government = communism } }
						potential_communist_puppet_target = yes
					}
					if = {
						limit = { ROOT = { has_government = fascism } }
						potential_fascist_annex_target = yes
					}
					potential_take_state_target = yes
					potential_border_war_target = yes
				}
			}
		}
		completion_reward = {
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 8
			modifier = {
				factor = 0
				has_opinion = { target = GER value > 0 }
			}
			modifier = {
				factor = 0
				GER = { in_weak_faction = no }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 2
				GER = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = prepare_for_war_conquerBAVGER
		icon = GFX_goal_generic_position_armies
		text = prepare_for_war_conquerGER
		prerequisite = { focus = border_disputes_conquerBAVGER }
		bypass = {
			has_war_with = GER
		}
		x = 0
		y = 1
		relative_position_id = border_disputes_conquerBAVGER
		cost = 4
		available = {
			date > 1937.1.1
			has_war = no
			not_in_border_conflict = yes
			GER = {
				exists = yes
				not_in_border_conflict = yes
			}
		}
		continue_if_invalid = yes
		select_effect = {
			random_owned_controlled_state = {
				limit = { any_neighbor_state = { is_fully_controlled_by = GER } }
				set_variable = { ROOT.attacker_state = THIS.id }
				set_state_flag = border_incident_active
			}
			var:attacker_state = {
				random_neighbor_state = {
					limit = { is_fully_controlled_by = GER }
					set_variable = { ROOT.defender_state = THIS.id }
					set_state_flag = border_incident_active
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = GER } } }
					random_state = {
						limit = {
							is_fully_controlled_by = GER
							is_coastal = yes
						}
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = GER } } }
					random_state = {
						limit = { is_fully_controlled_by = GER }
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
			}
		}
		completion_reward = {
			GER = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = 1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = 1000 } }
			}
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_opinion = { target = GER value > 0 }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 0
				GER = { in_weak_faction = no }
			}
			modifier = {
				factor = 2
				GER = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = neighbor_war_conquerBAVGER
		icon = GFX_goal_generic_occupy_states_ongoing_war
		text = neighbor_war_conquerGER
		prerequisite = { focus = prepare_for_war_conquerBAVGER }
		bypass = {
			has_war_with = GER
		}
		x = 0
		y = 1
		relative_position_id = prepare_for_war_conquerBAVGER
		cost = 3
		available = {
			has_war = no
			hidden_trigger = {
				NOT = { any_owned_state = { has_border_war = yes } }
				GER = { NOT = { any_owned_state = { has_border_war = yes } } }
			}
			if = {
				limit = { GER = { potential_border_war_target = yes } }
				var:attacker_state = { is_fully_controlled_by = ROOT }
				var:defender_state = { is_fully_controlled_by = GER }
				divisions_in_border_state = { state = var:attacker_state border_state = var:defender_state size > 0 }
			}
		}
		completion_reward = {
			if = {
				limit = { GER = { potential_take_core_target = yes } }
				declare_war_on = {
					target = GER
					type = take_core_state
					generator = core_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { GER = { potential_communist_puppet_target = yes } }
				declare_war_on = {
					target = GER
					type = puppet_wargoal_focus
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { GER = { potential_fascist_annex_target = yes } }
				declare_war_on = {
					target = GER
					type = annex_everything
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { GER = { potential_take_state_target = yes } }
				add_state_claim = var:defender_state
				declare_war_on = {
					target = GER
					type = take_state_focus
					generator = claimed_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { GER = { potential_border_war_target = yes } }
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = var:attacker_state
						num_provinces = 6
						on_win = neighbor_war.1
						on_lose = neighbor_war.2
						on_cancel = neighbor_war.3
					}
					defender = {
						state = var:defender_state
						num_provinces = 6
						on_win = neighbor_war.2
						on_lose = neighbor_war.1
						on_cancel = neighbor_war.3
					}
					minimum_duration_in_days = 14
				}
				add_named_threat = { threat = 1 name = neighbor_war_NF_threat }
			}
			GER = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = -1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = -1000 } }
			}
			var:attacker_state = { clr_state_flag = border_incident_active }
			var:defender_state = { clr_state_flag = border_incident_active }
		}
		ai_will_do = {
			factor = 10
		}
	}

	focus = {
		id = border_disputes_conquerBAVBRG
		icon = GFX_goal_generic_more_territorial_claims
		text = border_disputes_conquerBRG
		x = 30
		y = 0
		cost = 10
		available = {
			has_war = no
			not_in_border_conflict = yes
			BRG = {
				exists = yes
				not_allies_or_subjects = yes
				in_weak_faction = yes
				OR = {
					potential_take_core_target = yes
					if = {
						limit = { ROOT = { has_government = communism } }
						potential_communist_puppet_target = yes
					}
					if = {
						limit = { ROOT = { has_government = fascism } }
						potential_fascist_annex_target = yes
					}
					potential_take_state_target = yes
					potential_border_war_target = yes
				}
			}
		}
		completion_reward = {
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				has_opinion = { target = BRG value > 0 }
			}
			modifier = {
				factor = 0
				BRG = { in_weak_faction = no }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 2
				BRG = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = prepare_for_war_conquerBAVBRG
		icon = GFX_goal_generic_position_armies
		text = prepare_for_war_conquerBRG
		prerequisite = { focus = border_disputes_conquerBAVBRG }
		bypass = {
			has_war_with = BRG
		}
		x = 0
		y = 1
		relative_position_id = border_disputes_conquerBAVBRG
		cost = 4
		available = {
			date > 1937.1.1
			has_war = no
			not_in_border_conflict = yes
			BRG = {
				exists = yes
				not_in_border_conflict = yes
			}
		}
		continue_if_invalid = yes
		select_effect = {
			random_owned_controlled_state = {
				limit = { any_neighbor_state = { is_fully_controlled_by = BRG } }
				set_variable = { ROOT.attacker_state = THIS.id }
				set_state_flag = border_incident_active
			}
			var:attacker_state = {
				random_neighbor_state = {
					limit = { is_fully_controlled_by = BRG }
					set_variable = { ROOT.defender_state = THIS.id }
					set_state_flag = border_incident_active
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = BRG } } }
					random_state = {
						limit = {
							is_fully_controlled_by = BRG
							is_coastal = yes
						}
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = BRG } } }
					random_state = {
						limit = { is_fully_controlled_by = BRG }
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
			}
		}
		completion_reward = {
			BRG = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = 1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = 1000 } }
			}
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_opinion = { target = BRG value > 0 }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 0
				BRG = { in_weak_faction = no }
			}
			modifier = {
				factor = 2
				BRG = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = neighbor_war_conquerBAVBRG
		icon = GFX_goal_generic_occupy_states_ongoing_war
		text = neighbor_war_conquerBRG
		prerequisite = { focus = prepare_for_war_conquerBAVBRG }
		bypass = {
			has_war_with = BRG
		}
		x = 0
		y = 1
		relative_position_id = prepare_for_war_conquerBAVBRG
		cost = 3
		available = {
			has_war = no
			hidden_trigger = {
				NOT = { any_owned_state = { has_border_war = yes } }
				BRG = { NOT = { any_owned_state = { has_border_war = yes } } }
			}
			if = {
				limit = { BRG = { potential_border_war_target = yes } }
				var:attacker_state = { is_fully_controlled_by = ROOT }
				var:defender_state = { is_fully_controlled_by = BRG }
				divisions_in_border_state = { state = var:attacker_state border_state = var:defender_state size > 0 }
			}
		}
		completion_reward = {
			if = {
				limit = { BRG = { potential_take_core_target = yes } }
				declare_war_on = {
					target = BRG
					type = take_core_state
					generator = core_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { BRG = { potential_communist_puppet_target = yes } }
				declare_war_on = {
					target = BRG
					type = puppet_wargoal_focus
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { BRG = { potential_fascist_annex_target = yes } }
				declare_war_on = {
					target = BRG
					type = annex_everything
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { BRG = { potential_take_state_target = yes } }
				add_state_claim = var:defender_state
				declare_war_on = {
					target = BRG
					type = take_state_focus
					generator = claimed_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { BRG = { potential_border_war_target = yes } }
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = var:attacker_state
						num_provinces = 6
						on_win = neighbor_war.1
						on_lose = neighbor_war.2
						on_cancel = neighbor_war.3
					}
					defender = {
						state = var:defender_state
						num_provinces = 6
						on_win = neighbor_war.2
						on_lose = neighbor_war.1
						on_cancel = neighbor_war.3
					}
					minimum_duration_in_days = 14
				}
				add_named_threat = { threat = 1 name = neighbor_war_NF_threat }
			}
			BRG = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = -1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = -1000 } }
			}
			var:attacker_state = { clr_state_flag = border_incident_active }
			var:defender_state = { clr_state_flag = border_incident_active }
		}
		ai_will_do = {
			factor = 10
		}
	}

	focus = {
		id = border_disputes_conquerBAVSWI
		icon = GFX_goal_generic_more_territorial_claims
		text = border_disputes_conquerSWI
		x = 32
		y = 0
		cost = 10
		available = {
			has_war = no
			not_in_border_conflict = yes
			SWI = {
				exists = yes
				not_allies_or_subjects = yes
				in_weak_faction = yes
				OR = {
					potential_take_core_target = yes
					if = {
						limit = { ROOT = { has_government = communism } }
						potential_communist_puppet_target = yes
					}
					if = {
						limit = { ROOT = { has_government = fascism } }
						potential_fascist_annex_target = yes
					}
					potential_take_state_target = yes
					potential_border_war_target = yes
				}
			}
		}
		completion_reward = {
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				has_opinion = { target = SWI value > 0 }
			}
			modifier = {
				factor = 0
				SWI = { in_weak_faction = no }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 2
				SWI = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = prepare_for_war_conquerBAVSWI
		icon = GFX_goal_generic_position_armies
		text = prepare_for_war_conquerSWI
		prerequisite = { focus = border_disputes_conquerBAVSWI }
		bypass = {
			has_war_with = SWI
		}
		x = 0
		y = 1
		relative_position_id = border_disputes_conquerBAVSWI
		cost = 4
		available = {
			date > 1937.1.1
			has_war = no
			not_in_border_conflict = yes
			SWI = {
				exists = yes
				not_in_border_conflict = yes
			}
		}
		continue_if_invalid = yes
		select_effect = {
			random_owned_controlled_state = {
				limit = { any_neighbor_state = { is_fully_controlled_by = SWI } }
				set_variable = { ROOT.attacker_state = THIS.id }
				set_state_flag = border_incident_active
			}
			var:attacker_state = {
				random_neighbor_state = {
					limit = { is_fully_controlled_by = SWI }
					set_variable = { ROOT.defender_state = THIS.id }
					set_state_flag = border_incident_active
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = SWI } } }
					random_state = {
						limit = {
							is_fully_controlled_by = SWI
							is_coastal = yes
						}
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = SWI } } }
					random_state = {
						limit = { is_fully_controlled_by = SWI }
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
			}
		}
		completion_reward = {
			SWI = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = 1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = 1000 } }
			}
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				has_opinion = { target = SWI value > 0 }
			}
			modifier = {
				factor = 0.1
				threat > 0.25
			}
			modifier = {
				factor = 0
				SWI = { in_weak_faction = no }
			}
			modifier = {
				factor = 2
				SWI = { surrender_progress > 0.2 }
			}
		}
	}

	focus = {
		id = neighbor_war_conquerBAVSWI
		icon = GFX_goal_generic_occupy_states_ongoing_war
		text = neighbor_war_conquerSWI
		prerequisite = { focus = prepare_for_war_conquerBAVSWI }
		bypass = {
			has_war_with = SWI
		}
		x = 0
		y = 1
		relative_position_id = prepare_for_war_conquerBAVSWI
		cost = 3
		available = {
			has_war = no
			hidden_trigger = {
				NOT = { any_owned_state = { has_border_war = yes } }
				SWI = { NOT = { any_owned_state = { has_border_war = yes } } }
			}
			if = {
				limit = { SWI = { potential_border_war_target = yes } }
				var:attacker_state = { is_fully_controlled_by = ROOT }
				var:defender_state = { is_fully_controlled_by = SWI }
				divisions_in_border_state = { state = var:attacker_state border_state = var:defender_state size > 0 }
			}
		}
		completion_reward = {
			if = {
				limit = { SWI = { potential_take_core_target = yes } }
				declare_war_on = {
					target = SWI
					type = take_core_state
					generator = core_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { SWI = { potential_communist_puppet_target = yes } }
				declare_war_on = {
					target = SWI
					type = puppet_wargoal_focus
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { SWI = { potential_fascist_annex_target = yes } }
				declare_war_on = {
					target = SWI
					type = annex_everything
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { SWI = { potential_take_state_target = yes } }
				add_state_claim = var:defender_state
				declare_war_on = {
					target = SWI
					type = take_state_focus
					generator = claimed_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { SWI = { potential_border_war_target = yes } }
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = var:attacker_state
						num_provinces = 6
						on_win = neighbor_war.1
						on_lose = neighbor_war.2
						on_cancel = neighbor_war.3
					}
					defender = {
						state = var:defender_state
						num_provinces = 6
						on_win = neighbor_war.2
						on_lose = neighbor_war.1
						on_cancel = neighbor_war.3
					}
					minimum_duration_in_days = 14
				}
				add_named_threat = { threat = 1 name = neighbor_war_NF_threat }
			}
			SWI = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = -1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = -1000 } }
			}
			var:attacker_state = { clr_state_flag = border_incident_active }
			var:defender_state = { clr_state_flag = border_incident_active }
		}
		ai_will_do = {
			factor = 10
		}
	}

	focus = {
		id = border_disputes_nwBAVCRO
		icon = GFX_goal_generic_more_territorial_claims
		text = border_disputes_nwCRO
		x = 34
		y = 0
		cost = 10
		available = {
			has_war = no
			not_in_border_conflict = yes
			has_opinion = { target = CRO value < 0 }
			CRO = {
				exists = yes
				not_allies_or_subjects = yes
				in_weak_faction = yes
				OR = {
					potential_take_core_target = yes
					if = {
						limit = { ROOT = { has_government = communism } }
						potential_communist_puppet_target = yes
					}
					if = {
						limit = { ROOT = { has_government = fascism } }
						potential_fascist_annex_target = yes
					}
					potential_take_state_target = yes
					potential_border_war_target = yes
				}
			}
		}
		completion_reward = {
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				date < 1938.8.1
			}
			modifier = {
				factor = 0
				threat > 0.25
				date > 1938.8.1
			}
			modifier = {
				factor = 0
				threat > 0.4
				date > 1939.4.1
			}
			modifier = {
				factor = 0
				threat > 0.5
				date > 1939.8.1
			}
		}
	}

	focus = {
		id = prepare_for_war_nwBAVCRO
		icon = GFX_goal_generic_position_armies
		text = prepare_for_war_nwCRO
		prerequisite = { focus = border_disputes_nwBAVCRO }
		bypass = {
			has_war_with = CRO
		}
		x = 0
		y = 1
		relative_position_id = border_disputes_nwBAVCRO
		cost = 4
		available = {
			has_war = no
			not_in_border_conflict = yes
			has_opinion = { target = CRO value < 0 }
			CRO = {
				exists = yes
				not_in_border_conflict = yes
			}
		}
		continue_if_invalid = yes
		select_effect = {
			random_owned_controlled_state = {
				limit = { any_neighbor_state = { is_fully_controlled_by = CRO } }
				set_variable = { ROOT.attacker_state = THIS.id }
				set_state_flag = border_incident_active
			}
			var:attacker_state = {
				random_neighbor_state = {
					limit = { is_fully_controlled_by = CRO }
					set_variable = { ROOT.defender_state = THIS.id }
					set_state_flag = border_incident_active
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = CRO } } }
					random_state = {
						limit = {
							is_fully_controlled_by = CRO
							is_coastal = yes
						}
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
				if = {
					limit = { var:ROOT.defender_state = { NOT = { is_fully_controlled_by = CRO } } }
					random_state = {
						limit = { is_fully_controlled_by = CRO }
						set_variable = { ROOT.defender_state = THIS.id }
						set_state_flag = border_incident_active
					}
				}
			}
		}
		completion_reward = {
			CRO = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = 1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = 1000 } }
			}
			add_manpower = 10000
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				date < 1938.8.1
			}
			modifier = {
				factor = 0
				threat > 0.25
				date > 1938.8.1
			}
			modifier = {
				factor = 0
				threat > 0.4
				date > 1939.4.1
			}
			modifier = {
				factor = 0
				threat > 0.5
				date > 1939.8.1
			}
		}
	}

	focus = {
		id = neighbor_war_nwBAVCRO
		icon = GFX_goal_generic_occupy_states_ongoing_war
		text = neighbor_war_nwCRO
		prerequisite = { focus = prepare_for_war_nwBAVCRO }
		bypass = {
			has_war_with = CRO
		}
		x = 0
		y = 1
		relative_position_id = prepare_for_war_nwBAVCRO
		cost = 3
		available = {
			has_war = no
			hidden_trigger = {
				NOT = { any_owned_state = { has_border_war = yes } }
				CRO = { NOT = { any_owned_state = { has_border_war = yes } } }
			}
			if = {
				limit = { CRO = { potential_border_war_target = yes } }
				var:attacker_state = { is_fully_controlled_by = ROOT }
				var:defender_state = { is_fully_controlled_by = CRO }
				divisions_in_border_state = { state = var:attacker_state border_state = var:defender_state size > 0 }
			}
		}
		completion_reward = {
			if = {
				limit = { CRO = { potential_take_core_target = yes } }
				declare_war_on = {
					target = CRO
					type = take_core_state
					generator = core_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { CRO = { potential_communist_puppet_target = yes } }
				declare_war_on = {
					target = CRO
					type = puppet_wargoal_focus
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { CRO = { potential_fascist_annex_target = yes } }
				declare_war_on = {
					target = CRO
					type = annex_everything
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { CRO = { potential_take_state_target = yes } }
				add_state_claim = var:defender_state
				declare_war_on = {
					target = CRO
					type = take_state_focus
					generator = claimed_states
				}
				add_named_threat = { threat = 3 name = neighbor_war_NF_threat }
			}
			else_if = {
				limit = { CRO = { potential_border_war_target = yes } }
				start_border_war = {
					change_state_after_war = no
					attacker = {
						state = var:attacker_state
						num_provinces = 6
						on_win = neighbor_war.1
						on_lose = neighbor_war.2
						on_cancel = neighbor_war.3
					}
					defender = {
						state = var:defender_state
						num_provinces = 6
						on_win = neighbor_war.2
						on_lose = neighbor_war.1
						on_cancel = neighbor_war.3
					}
					minimum_duration_in_days = 14
				}
				add_named_threat = { threat = 1 name = neighbor_war_NF_threat }
			}
			CRO = {
				add_ai_strategy = { type = prepare_for_war id = ROOT value = -1000 }
				ROOT = { add_ai_strategy = { type = prepare_for_war id = PREV value = -1000 } }
			}
			var:attacker_state = { clr_state_flag = border_incident_active }
			var:defender_state = { clr_state_flag = border_incident_active }
		}
		ai_will_do = {
			factor = 10
		}
	}

}